<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.apeces.dao.ProductDao">
	<resultMap id="proCatePivot" type="com.apeces.pojo.ProCatePivot">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="price" property="price"/>
		<result column="unit" property="unit"/>
		<result column="category_id" property="category_id"/>
		<result column="cover_img" property="cover_img"/>
		<result column="introduction" property="introduction"/>
		<result column="detail_img" property="detail_img"/>
		<result column="shop_id" property="shop_id"/>
		<result column="nums" property="nums"/>
		
		<result column="category_name" property="category_name"/>
	</resultMap>

    <resultMap id="proCount" type="java.lang.Integer">
        <result column="count"/>
    </resultMap>
	
	<!-- ADMIN -->
	<select id="queryProByShop" parameterType="Map" resultMap="proCatePivot, proCount">
		SELECT SQL_CALC_FOUND_ROWS
			p.*,
			c.category_name 
		FROM
			product AS p
			LEFT JOIN category AS c ON p.category_id = c.id 
		<where>
			<if test="shop_id != null">
				p.shop_id = #{shop_id}
			</if>
		</where>
		<if test="limit > 0">
			limit #{limit} offset #{offset}
		</if>
		;
			
		SELECT FOUND_ROWS() as count;
	</select>
	
	<select id="queryPro" resultMap="proCatePivot">
		SELECT
			p.*,
			c.category_name 
		FROM
			product AS p
			LEFT JOIN category AS c ON p.category_id = c.id 
		WHERE
			p.id = #{id};
	</select>
	
	<insert id="insertPro">
		INSERT INTO product(name, price, unit, category_id, cover_img, introduction, detail_img, shop_id, nums)
		VALUES(#{name}, #{price}, #{unit}, #{category_id}, #{cover_img}, #{introduction}, #{detail_img}, #{shop_id}, #{nums});
	</insert>
	
	<update id="editPro">
		UPDATE product
		<set>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="price != null">
				price = #{price},
			</if>
			<if test="unit != null">
				unit = #{unit},
			</if>
			<if test="category_id != null">
				category_id = #{category_id},
			</if>
			<if test="cover_img != null">
				cover_img = #{cover_img},
			</if>
			<if test="introduction != null">
				introduction = #{introduction},
			</if>
			<if test="detail_img != null">
				detail_img = #{detail_img},
			</if>
			<if test="shop_id != null">
				shop_id = #{shop_id},
			</if>
			<if test="nums != null">
				nums = #{nums}
			</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<delete id="delPro">
		DELETE FROM product WHERE id = #{id};
	</delete>

	<!-- APP -->
	<resultMap id="appProList" type="com.apeces.pojo.appProList">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="price" property="price"/>
		<result column="cover_img" property="cover_img"/>
	</resultMap>
	
	<select id="queryAppPro" parameterType="Map" resultMap="appProList, proCount">
		SELECT SQL_CALC_FOUND_ROWS * FROM product
		<where>
			nums > 0
			<if test="content != null">
				AND name LIKE "%"#{content}"%"
			</if>
			<if test="category_id != null">
				AND category_id = #{category_id}
			</if>
		</where>
		<if test="limit > 0">
			limit #{limit} offset #{offset}
		</if>
		;
		
		SELECT FOUND_ROWS() as count;
	</select>
	
	<resultMap id="appProDetail" type="com.apeces.pojo.AppProDetail">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="price" property="price"/>
		<result column="cover_img" property="cover_img"/>
		<result column="unit" property="unit"/>
		<result column="introduction" property="introduction"/>
		<result column="detail_img" property="detail_img"/>
		<result column="nums" property="nums"/>
		
		<result column="category_id" property="category_id"/>
		<result column="category_name" property="category_name"/>
		
		<result column="shop_id" property="shop_id"/>
		<result column="shop_name" property="shop_name"/>
		<result column="shop_logo" property="shop_logo"/>
	</resultMap>
	
	<select id="queryAppProDetail" resultMap="appProDetail">
		SELECT 
			p.*,
			c.category_name,
			s.id as shop_id, s.name as shop_name, s.logo as shop_logo
		FROM
			product AS p
			LEFT JOIN category AS c ON c.id = p.category_id
			LEFT JOIN shop AS s ON s.id = p.shop_id
		WHERE
			p.id = #{id};
	</select>
	
	<update id="updateNums" parameterType="Map">
		UPDATE product SET nums = #{nums} WHERE id = #{id};
	</update>
</mapper>