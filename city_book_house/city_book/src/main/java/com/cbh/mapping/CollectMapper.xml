<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.cbh.dao.CollectDao">
	<resultMap id="collectList" type="com.cbh.domain.Collect">
 		<result property="id" column="id"/>
        <result column="book_id" property="book_id"/>
        <result column="user_id" property="user_id"/>
        <result column="create_time" property="create_time"/>
        
       	<result column="book_name" property="book_name"/>
       	<result column="book_image" property="book_image"/>
       	<result column="book_author" property="book_author"/>
       	<result column="book_stock" property="book_stock"/>
       	<result column="book_first_cate" property="book_first_cate"/>
       	<result column="second_first_cate" property="second_first_cate"/>
 	</resultMap>
	
	<!-- 收藏列表-->
	<select id="getCollectList" resultMap="collectList">
		SELECT
			c.*,
			b.book_name, b.author as book_author, b.image as book_image, b.stock as book_stock, 
			fc.category_name as book_first_cate, 
        	sc.category_name as second_first_cate
		FROM
			cb_collect AS c
			INNER JOIN cb_books AS b ON c.book_id = b.id
			LEFT JOIN cb_category AS fc ON fc.id = b.first_category_id
			LEFT JOIN cb_category AS sc ON sc.id = b.second_category_id
		<where>
			<if test="user_id != null">
				c.user_id = #{user_id}
			</if>
		</where>
		ORDER BY c.create_time DESC;
	</select>
	
	<insert id="insertCollect" parameterType="com.cbh.domain.Collect">
		INSERT INTO 
    	cb_collect(user_id, book_id, create_time)
    	SELECT #{user_id}, #{book_id}, #{create_time}
    	FROM DUAL
    	WHERE NOT EXISTS
    		(SELECT id FROM cb_collect WHERE user_id = #{user_id} AND book_id = #{book_id});
	</insert>
	
	<delete id="deleteCollect">
		DELETE FROM cb_collect WHERE id = #{id};
	</delete>
</mapper>